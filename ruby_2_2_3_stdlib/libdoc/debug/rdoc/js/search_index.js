var search_data = {"index":{"searchIndex":["debugger__","rubyvm","thread","object","break_points()","context()","debug_thread_info()","display()","get_thread()","interrupt()","make_thread_list()","resume()","set_last_thread()","set_trace()","stdout()","stdout=()","suspend()","thread_list()","thread_list_all()","waiting()"],"longSearchIndex":["debugger__","debugger__::rubyvm","debugger__::thread","object","debugger__::break_points()","debugger__::context()","debugger__::debug_thread_info()","debugger__::display()","debugger__::get_thread()","debugger__::interrupt()","debugger__::make_thread_list()","debugger__::resume()","debugger__::set_last_thread()","debugger__::set_trace()","debugger__::stdout()","debugger__::stdout=()","debugger__::suspend()","debugger__::thread_list()","debugger__::thread_list_all()","debugger__::waiting()"],"info":[["DEBUGGER__","","DEBUGGER__.html","","<p>This library provides debugging functionality to Ruby.\n<p>To add a debugger to your code, start by requiring …\n"],["DEBUGGER__::RubyVM","","DEBUGGER__/RubyVM.html","",""],["DEBUGGER__::Thread","","DEBUGGER__/Thread.html","",""],["Object","","Object.html","",""],["break_points","DEBUGGER__","DEBUGGER__.html#method-c-break_points","()","<p>Returns the list of break points where execution will be stopped.\n<p>See DEBUGGER__ for more usage\n"],["context","DEBUGGER__","DEBUGGER__.html#method-c-context","(thread=Thread.current)",""],["debug_thread_info","DEBUGGER__","DEBUGGER__.html#method-c-debug_thread_info","(input, binding)",""],["display","DEBUGGER__","DEBUGGER__.html#method-c-display","()","<p>Returns the display expression list\n<p>See DEBUGGER__ for more usage\n"],["get_thread","DEBUGGER__","DEBUGGER__.html#method-c-get_thread","(num)",""],["interrupt","DEBUGGER__","DEBUGGER__.html#method-c-interrupt","()",""],["make_thread_list","DEBUGGER__","DEBUGGER__.html#method-c-make_thread_list","()",""],["resume","DEBUGGER__","DEBUGGER__.html#method-c-resume","()",""],["set_last_thread","DEBUGGER__","DEBUGGER__.html#method-c-set_last_thread","(th)",""],["set_trace","DEBUGGER__","DEBUGGER__.html#method-c-set_trace","( arg )",""],["stdout","DEBUGGER__","DEBUGGER__.html#method-c-stdout","()","<p>Returns the IO used as stdout. Defaults to STDOUT\n"],["stdout=","DEBUGGER__","DEBUGGER__.html#method-c-stdout-3D","(s)","<p>Sets the IO used as stdout. Defaults to STDOUT\n"],["suspend","DEBUGGER__","DEBUGGER__.html#method-c-suspend","()",""],["thread_list","DEBUGGER__","DEBUGGER__.html#method-c-thread_list","(num)",""],["thread_list_all","DEBUGGER__","DEBUGGER__.html#method-c-thread_list_all","()",""],["waiting","DEBUGGER__","DEBUGGER__.html#method-c-waiting","()","<p>Returns the list of waiting threads.\n<p>When stepping through the traces of a function, thread gets suspended, …\n"]]}}
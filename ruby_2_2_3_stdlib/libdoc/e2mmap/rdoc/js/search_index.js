var search_data = {"index":{"searchIndex":["exception2messagemapper","e2mm","fail()","raise()","bind()","def_e2message()","def_exception()","e2mm_message()","fail()"],"longSearchIndex":["exception2messagemapper","exception2messagemapper::e2mm","exception2messagemapper#fail()","exception2messagemapper#raise()","exception2messagemapper#bind()","exception2messagemapper#def_e2message()","exception2messagemapper#def_exception()","exception2messagemapper::e2mm::e2mm_message()","exception2messagemapper#fail()"],"info":[["Exception2MessageMapper","","Exception2MessageMapper.html","","<p>Helper module for easily defining exceptions with predefined messages.\n<p>Usage\n<p>1.\n"],["Exception2MessageMapper::E2MM","","Exception2MessageMapper/E2MM.html","",""],["Fail","Exception2MessageMapper","Exception2MessageMapper.html#method-i-Fail","(err = nil, *rest)",""],["Raise","Exception2MessageMapper","Exception2MessageMapper.html#method-i-Raise","(err = nil, *rest)","<p>Fail(err, *rest)\n\n<pre>err:    exception\nrest:   message arguments</pre>\n"],["bind","Exception2MessageMapper","Exception2MessageMapper.html#method-i-bind","(cl)",""],["def_e2message","Exception2MessageMapper","Exception2MessageMapper.html#method-i-def_e2message","(c, m)","<p>def_e2message(c, m)\n\n<pre>    c:  exception\n    m:  message_form\ndefine exception c with message m.</pre>\n"],["def_exception","Exception2MessageMapper","Exception2MessageMapper.html#method-i-def_exception","(n, m, s = StandardError)","<p>def_exception(n, m, s)\n\n<pre>    n:  exception_name\n    m:  message_form\n    s:  superclass(default: StandardError) ...</pre>\n"],["e2mm_message","Exception2MessageMapper::E2MM","Exception2MessageMapper/E2MM.html#method-c-e2mm_message","(klass, exp)",""],["fail","Exception2MessageMapper","Exception2MessageMapper.html#method-i-fail","(err = nil, *rest)",""]]}}
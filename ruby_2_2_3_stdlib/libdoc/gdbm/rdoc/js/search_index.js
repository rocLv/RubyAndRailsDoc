var search_data = {"index":{"searchIndex":["gdbm","gdbmerror","gdbmfatalerror","[]()","[]=()","cachesize=()","clear()","close()","closed?()","delete()","delete_if()","each()","each_key()","each_pair()","each_value()","empty?()","fastmode=()","fetch()","has_key?()","has_value?()","include?()","invert()","key()","key?()","keys()","length()","member?()","new()","open()","reject()","reject!()","reorganize()","replace()","select()","shift()","size()","store()","sync()","syncmode=()","to_a()","to_hash()","update()","value?()","values()","values_at()"],"longSearchIndex":["gdbm","gdbmerror","gdbmfatalerror","gdbm#[]()","gdbm#[]=()","gdbm#cachesize=()","gdbm#clear()","gdbm#close()","gdbm#closed?()","gdbm#delete()","gdbm#delete_if()","gdbm#each()","gdbm#each_key()","gdbm#each_pair()","gdbm#each_value()","gdbm#empty?()","gdbm#fastmode=()","gdbm#fetch()","gdbm#has_key?()","gdbm#has_value?()","gdbm#include?()","gdbm#invert()","gdbm#key()","gdbm#key?()","gdbm#keys()","gdbm#length()","gdbm#member?()","gdbm::new()","gdbm::open()","gdbm#reject()","gdbm#reject!()","gdbm#reorganize()","gdbm#replace()","gdbm#select()","gdbm#shift()","gdbm#size()","gdbm#store()","gdbm#sync()","gdbm#syncmode=()","gdbm#to_a()","gdbm#to_hash()","gdbm#update()","gdbm#value?()","gdbm#values()","gdbm#values_at()"],"info":[["GDBM","","GDBM.html","","<p>Summary\n<p>Ruby extension for GNU dbm (gdbm) -- a simple database engine for storing\nkey-value pairs on disk. ...\n"],["GDBMError","","GDBMError.html","",""],["GDBMFatalError","","GDBMFatalError.html","",""],["[]","GDBM","GDBM.html#method-i-5B-5D","(p1)","<p>Retrieves the <em>value</em> corresponding to <em>key</em>.\n"],["[]=","GDBM","GDBM.html#method-i-5B-5D-3D","(p1, p2)","<p>Associates the value <em>value</em> with the specified <em>key</em>.\n"],["cachesize=","GDBM","GDBM.html#method-i-cachesize-3D","(p1)","<p>Sets the size of the internal bucket cache to <em>size</em>.\n"],["clear","GDBM","GDBM.html#method-i-clear","()","<p>Removes all the key-value pairs within <em>gdbm</em>.\n"],["close","GDBM","GDBM.html#method-i-close","()","<p>Closes the associated database file.\n"],["closed?","GDBM","GDBM.html#method-i-closed-3F","()","<p>Returns true if the associated database file has been closed.\n"],["delete","GDBM","GDBM.html#method-i-delete","(p1)","<p>Removes the key-value-pair with the specified <em>key</em> from this\ndatabase and returns the corresponding <em>value</em> …\n"],["delete_if","GDBM","GDBM.html#method-i-delete_if","()","<p>Deletes every key-value pair from <em>gdbm</em> for which <em>block</em>\nevaluates to true.\n"],["each","GDBM","GDBM.html#method-i-each","()","<p>Executes <em>block</em> for each key in the database, passing the\n<em>key</em> and the corresponding <em>value</em> as a parameter. …\n"],["each_key","GDBM","GDBM.html#method-i-each_key","()","<p>Executes <em>block</em> for each key in the database, passing the\n<em>key</em> as a parameter.\n"],["each_pair","GDBM","GDBM.html#method-i-each_pair","()","<p>Executes <em>block</em> for each key in the database, passing the\n<em>key</em> and the corresponding <em>value</em> as a parameter. …\n"],["each_value","GDBM","GDBM.html#method-i-each_value","()","<p>Executes <em>block</em> for each key in the database, passing the\ncorresponding <em>value</em> as a parameter.\n"],["empty?","GDBM","GDBM.html#method-i-empty-3F","()","<p>Returns true if the database is empty.\n"],["fastmode=","GDBM","GDBM.html#method-i-fastmode-3D","(p1)","<p>Turns the database’s fast mode on or off. If fast mode is turned on, gdbm\ndoes not wait for writes to …\n"],["fetch","GDBM","GDBM.html#method-i-fetch","(p1, p2 = v2)","<p>Retrieves the <em>value</em> corresponding to <em>key</em>. If there is no\nvalue associated with <em>key</em>, <em>default</em> will be returned …\n"],["has_key?","GDBM","GDBM.html#method-i-has_key-3F","(p1)","<p>Returns true if the given key <em>k</em> exists within the database.\nReturns false otherwise.\n"],["has_value?","GDBM","GDBM.html#method-i-has_value-3F","(p1)","<p>Returns true if the given value <em>v</em> exists within the database.\nReturns false otherwise.\n"],["include?","GDBM","GDBM.html#method-i-include-3F","(p1)","<p>Returns true if the given key <em>k</em> exists within the database.\nReturns false otherwise.\n"],["invert","GDBM","GDBM.html#method-i-invert","()","<p>Returns a hash created by using <em>gdbm</em>’s values as keys, and the\nkeys as values.\n"],["key","GDBM","GDBM.html#method-i-key","(p1)","<p>Returns the <em>key</em> for a given <em>value</em>. If several keys may\nmap to the same value, the key that is found first …\n"],["key?","GDBM","GDBM.html#method-i-key-3F","(p1)","<p>Returns true if the given key <em>k</em> exists within the database.\nReturns false otherwise.\n"],["keys","GDBM","GDBM.html#method-i-keys","()","<p>Returns an array of all keys of this database.\n"],["length","GDBM","GDBM.html#method-i-length","()","<p>Returns the number of key-value pairs in this database.\n"],["member?","GDBM","GDBM.html#method-i-member-3F","(p1)","<p>Returns true if the given key <em>k</em> exists within the database.\nReturns false otherwise.\n"],["new","GDBM","GDBM.html#method-c-new","(p1, p2 = v2, p3 = v3)","<p>Creates a new GDBM instance by opening a gdbm file named <em>filename</em>.\nIf the file does not exist, a new …\n"],["open","GDBM","GDBM.html#method-c-open","(*args)","<p>If called without a block, this is synonymous to GDBM::new. If a block is\ngiven, the new GDBM instance …\n"],["reject","GDBM","GDBM.html#method-i-reject","()","<p>Returns a hash copy of <em>gdbm</em> where all key-value pairs from\n<em>gdbm</em> for which <em>block</em> evaluates to true are …\n"],["reject!","GDBM","GDBM.html#method-i-reject-21","()","<p>Deletes every key-value pair from <em>gdbm</em> for which <em>block</em>\nevaluates to true.\n"],["reorganize","GDBM","GDBM.html#method-i-reorganize","()","<p>Reorganizes the database file. This operation removes reserved space of\nelements that have already been …\n"],["replace","GDBM","GDBM.html#method-i-replace","(p1)","<p>Replaces the content of <em>gdbm</em> with the key-value pairs of\n<em>other</em>. <em>other</em> must have an each_pair method. …\n"],["select","GDBM","GDBM.html#method-i-select","()","<p>Returns a new array of all key-value pairs of the database for which\n<em>block</em> evaluates to true.\n"],["shift","GDBM","GDBM.html#method-i-shift","()","<p>Removes a key-value-pair from this database and returns it as a two-item\narray [ <em>key</em>, <em>value</em> ]. Returns …\n"],["size","GDBM","GDBM.html#method-i-size","()","<p>Returns the number of key-value pairs in this database.\n"],["store","GDBM","GDBM.html#method-i-store","(p1, p2)","<p>Associates the value <em>value</em> with the specified <em>key</em>.\n"],["sync","GDBM","GDBM.html#method-i-sync","()","<p>Unless the <em>gdbm</em> object has been opened with the\n<strong>SYNC</strong> flag, it is not guaranteed that database modification\n…\n"],["syncmode=","GDBM","GDBM.html#method-i-syncmode-3D","(p1)","<p>Turns the database’s synchronization mode on or off. If the synchronization\nmode is turned on, the database’s …\n"],["to_a","GDBM","GDBM.html#method-i-to_a","()","<p>Returns an array of all key-value pairs contained in the database.\n"],["to_hash","GDBM","GDBM.html#method-i-to_hash","()","<p>Returns a hash of all key-value pairs contained in the database.\n"],["update","GDBM","GDBM.html#method-i-update","(p1)","<p>Adds the key-value pairs of <em>other</em> to <em>gdbm</em>, overwriting\nentries with duplicate keys with those from <em>other</em> …\n"],["value?","GDBM","GDBM.html#method-i-value-3F","(p1)","<p>Returns true if the given value <em>v</em> exists within the database.\nReturns false otherwise.\n"],["values","GDBM","GDBM.html#method-i-values","()","<p>Returns an array of all values of this database.\n"],["values_at","GDBM","GDBM.html#method-i-values_at","(*args)","<p>Returns an array of the values associated with each specified <em>key</em>.\n"]]}}
var search_data = {"index":{"searchIndex":["net","apop","apopsession","pop3","popauthenticationerror","popbadresponse","poperror","popmail","apop()","active?()","all()","apop?()","apop?()","apop?()","auth_only()","auth_only()","certs()","create_ssl_params()","default_pop3_port()","default_pop3s_port()","default_port()","delete()","delete!()","delete_all()","delete_all()","deleted?()","disable_ssl()","disable_ssl()","each()","each_mail()","enable_ssl()","enable_ssl()","finish()","foreach()","header()","inspect()","inspect()","logging()","mail()","mails()","n_bytes()","n_mails()","new()","pop()","port()","read_timeout=()","reset()","set_debug_output()","ssl_params()","start()","start()","started?()","top()","uidl()","unique_id()","use_ssl?()","use_ssl?()","verify()"],"longSearchIndex":["net","net::apop","net::apopsession","net::pop3","net::popauthenticationerror","net::popbadresponse","net::poperror","net::popmail","net::pop3::apop()","net::pop3#active?()","net::popmail#all()","net::apop#apop?()","net::apop#apop?()","net::pop3#apop?()","net::pop3::auth_only()","net::pop3#auth_only()","net::pop3::certs()","net::pop3::create_ssl_params()","net::pop3::default_pop3_port()","net::pop3::default_pop3s_port()","net::pop3::default_port()","net::popmail#delete()","net::popmail#delete!()","net::pop3::delete_all()","net::pop3#delete_all()","net::popmail#deleted?()","net::pop3#disable_ssl()","net::pop3::disable_ssl()","net::pop3#each()","net::pop3#each_mail()","net::pop3#enable_ssl()","net::pop3::enable_ssl()","net::pop3#finish()","net::pop3::foreach()","net::popmail#header()","net::pop3#inspect()","net::popmail#inspect()","net::pop3#logging()","net::popmail#mail()","net::pop3#mails()","net::pop3#n_bytes()","net::pop3#n_mails()","net::pop3::new()","net::popmail#pop()","net::pop3#port()","net::pop3#read_timeout=()","net::pop3#reset()","net::pop3#set_debug_output()","net::pop3::ssl_params()","net::pop3#start()","net::pop3::start()","net::pop3#started?()","net::popmail#top()","net::popmail#uidl()","net::popmail#unique_id()","net::pop3::use_ssl?()","net::pop3#use_ssl?()","net::pop3::verify()"],"info":[["Net","","Net.html","",""],["Net::APOP","","Net/APOP.html","","<p>This class is equivalent to POP3, except that it uses APOP authentication.\n"],["Net::APOPSession","","Net/APOP.html","","<p>This class is equivalent to POP3, except that it uses APOP authentication.\n"],["Net::POP3","","Net/POP3.html","","<p>What is This Library?\n<p>This library provides functionality for retrieving email via POP3, the Post\nOffice …\n"],["Net::POPAuthenticationError","","Net/POPAuthenticationError.html","","<p>POP3 authentication error.\n"],["Net::POPBadResponse","","Net/POPBadResponse.html","","<p>Unexpected response from the server.\n"],["Net::POPError","","Net/POPError.html","","<p>Non-authentication POP3 protocol error (reply code “-ERR”, except\nauthentication).\n"],["Net::POPMail","","Net/POPMail.html","","<p>This class represents a message which exists on the POP server. Instances\nof this class are created by …\n"],["APOP","Net::POP3","Net/POP3.html#method-c-APOP","(isapop)","<p>Returns the APOP class if <code>isapop</code> is true; otherwise, returns\nthe POP class.  For example:\n\n<pre class=\"ruby\"><span class=\"ruby-comment\"># Example 1 ...</span>\n</pre>\n"],["active?","Net::POP3","Net/POP3.html#method-i-active-3F","()",""],["all","Net::POPMail","Net/POPMail.html#method-i-all","( dest = '' )",""],["apop?","Net::APOP","Net/APOP.html#method-i-apop-3F","()","<p>Always returns true.\n"],["apop?","Net::APOP","Net/APOP.html#method-i-apop-3F","()","<p>Always returns true.\n"],["apop?","Net::POP3","Net/POP3.html#method-i-apop-3F","()","<p>Does this instance use APOP authentication?\n"],["auth_only","Net::POP3","Net/POP3.html#method-c-auth_only","(address, port = nil, account = nil, password = nil, isapop = false)","<p>Opens a POP3 session, attempts authentication, and quits.\n<p>This method raises POPAuthenticationError if …\n"],["auth_only","Net::POP3","Net/POP3.html#method-i-auth_only","(account, password)","<p>Starts a pop3 session, attempts authentication, and quits. This method must\nnot be called while POP3 …\n"],["certs","Net::POP3","Net/POP3.html#method-c-certs","()","<p>returns the :ca_file or :ca_path from POP3.ssl_params\n"],["create_ssl_params","Net::POP3","Net/POP3.html#method-c-create_ssl_params","(verify_or_params = {}, certs = nil)","<p>Constructs proper parameters from arguments\n"],["default_pop3_port","Net::POP3","Net/POP3.html#method-c-default_pop3_port","()","<p>The default port for POP3 connections, port 110\n"],["default_pop3s_port","Net::POP3","Net/POP3.html#method-c-default_pop3s_port","()","<p>The default port for POP3S connections, port 995\n"],["default_port","Net::POP3","Net/POP3.html#method-c-default_port","()","<p>returns the port for POP3\n"],["delete","Net::POPMail","Net/POPMail.html#method-i-delete","()","<p>Marks a message for deletion on the server.  Deletion does not actually\noccur until the end of the session; …\n"],["delete!","Net::POPMail","Net/POPMail.html#method-i-delete-21","()",""],["delete_all","Net::POP3","Net/POP3.html#method-c-delete_all","(address, port = nil, account = nil, password = nil, isapop = false, &block)","<p>Starts a POP3 session and deletes all messages on the server. If a block is\ngiven, each POPMail object …\n"],["delete_all","Net::POP3","Net/POP3.html#method-i-delete_all","()","<p>Deletes all messages on the server.\n<p>If called with a block, yields each message in turn before deleting …\n"],["deleted?","Net::POPMail","Net/POPMail.html#method-i-deleted-3F","()","<p>True if the mail has been deleted.\n"],["disable_ssl","Net::POP3","Net/POP3.html#method-i-disable_ssl","()","<p>Disable SSL for all new instances.\n"],["disable_ssl","Net::POP3","Net/POP3.html#method-c-disable_ssl","()","<p>Disable SSL for all new instances.\n"],["each","Net::POP3","Net/POP3.html#method-i-each","()",""],["each_mail","Net::POP3","Net/POP3.html#method-i-each_mail","()","<p>Yields each message to the passed-in block in turn. Equivalent to:\n\n<pre>pop3.mails.each do |popmail|\n  .... ...</pre>\n"],["enable_ssl","Net::POP3","Net/POP3.html#method-i-enable_ssl","(verify_or_params = {}, certs = nil, port = nil)","<p>Enables SSL for this instance.  Must be called before the connection is\nestablished to have any effect. …\n"],["enable_ssl","Net::POP3","Net/POP3.html#method-c-enable_ssl","(*args)","<p>Enable SSL for all new instances. <code>params</code> is passed to\nOpenSSL::SSLContext#set_params.\n"],["finish","Net::POP3","Net/POP3.html#method-i-finish","()","<p>Finishes a POP3 session and closes TCP connection.\n"],["foreach","Net::POP3","Net/POP3.html#method-c-foreach","(address, port = nil, account = nil, password = nil, isapop = false)","<p>Starts a POP3 session and iterates over each POPMail object, yielding it to\nthe <code>block</code>. This method is …\n"],["header","Net::POPMail","Net/POPMail.html#method-i-header","(dest = '')","<p>Fetches the message header.\n<p>The optional <code>dest</code> argument is obsolete.\n<p>This method raises a POPError if an …\n"],["inspect","Net::POP3","Net/POP3.html#method-i-inspect","()","<p>Provide human-readable stringification of class state.\n"],["inspect","Net::POPMail","Net/POPMail.html#method-i-inspect","()","<p>Provide human-readable stringification of class state.\n"],["logging","Net::POP3","Net/POP3.html#method-i-logging","(msg)","<p>debugging output for <code>msg</code>\n"],["mail","Net::POPMail","Net/POPMail.html#method-i-mail","( dest = '' )",""],["mails","Net::POP3","Net/POP3.html#method-i-mails","()","<p>Returns an array of Net::POPMail objects, representing all the messages on\nthe server.  This array is …\n"],["n_bytes","Net::POP3","Net/POP3.html#method-i-n_bytes","()","<p>Returns the total size in bytes of all the messages on the POP server.\n"],["n_mails","Net::POP3","Net/POP3.html#method-i-n_mails","()","<p>Returns the number of messages on the POP server.\n"],["new","Net::POP3","Net/POP3.html#method-c-new","(addr, port = nil, isapop = false)","<p>Creates a new POP3 object.\n<p><code>address</code> is the hostname or ip address of your POP3 server.\n<p>The optional <code>port</code> …\n"],["pop","Net::POPMail","Net/POPMail.html#method-i-pop","( dest = '' )","<p>This method fetches the message.  If called with a block, the message is\nyielded to the block one chunk …\n"],["port","Net::POP3","Net/POP3.html#method-i-port","()","<p>The port number to connect to.\n"],["read_timeout=","Net::POP3","Net/POP3.html#method-i-read_timeout-3D","(sec)","<p>Set the read timeout.\n"],["reset","Net::POP3","Net/POP3.html#method-i-reset","()","<p>Resets the session.  This clears all “deleted” marks from messages.\n<p>This method raises a POPError …\n"],["set_debug_output","Net::POP3","Net/POP3.html#method-i-set_debug_output","(arg)","<p><strong>WARNING</strong>: This method causes a serious security hole. Use\nthis method only for debugging.\n<p>Set an output …\n"],["ssl_params","Net::POP3","Net/POP3.html#method-c-ssl_params","()","<p>returns the SSL Parameters\n<p>see also POP3.enable_ssl\n"],["start","Net::POP3","Net/POP3.html#method-i-start","(account, password)","<p>Starts a POP3 session.\n<p>When called with block, gives a POP3 object to the block and closes the\nsession …\n"],["start","Net::POP3","Net/POP3.html#method-c-start","(address, port = nil, account = nil, password = nil, isapop = false)","<p>Creates a new POP3 object and open the connection.  Equivalent to\n\n<pre>Net::POP3.new(address, port, isapop).start(account, ...</pre>\n"],["started?","Net::POP3","Net/POP3.html#method-i-started-3F","()","<p><code>true</code> if the POP3 session has started.\n"],["top","Net::POPMail","Net/POPMail.html#method-i-top","(lines, dest = '')","<p>Fetches the message header and <code>lines</code> lines of body.\n<p>The optional <code>dest</code> argument is obsolete.\n<p>This method …\n"],["uidl","Net::POPMail","Net/POPMail.html#method-i-uidl","()",""],["unique_id","Net::POPMail","Net/POPMail.html#method-i-unique_id","()","<p>Returns the unique-id of the message. Normally the unique-id is a hash\nstring of the message.\n<p>This method …\n"],["use_ssl?","Net::POP3","Net/POP3.html#method-c-use_ssl-3F","()","<p>returns <code>true</code> if POP3.ssl_params is set\n"],["use_ssl?","Net::POP3","Net/POP3.html#method-i-use_ssl-3F","()","<p>does this instance use SSL?\n"],["verify","Net::POP3","Net/POP3.html#method-c-verify","()","<p>returns whether verify_mode is enable from POP3.ssl_params\n"]]}}
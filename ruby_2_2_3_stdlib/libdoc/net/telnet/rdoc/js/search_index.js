var search_data = {"index":{"searchIndex":["net","telnet","binmode()","binmode=()","close()","cmd()","login()","new()","preprocess()","print()","puts()","telnetmode()","telnetmode=()","waitfor()","write()"],"longSearchIndex":["net","net::telnet","net::telnet#binmode()","net::telnet#binmode=()","net::telnet#close()","net::telnet#cmd()","net::telnet#login()","net::telnet::new()","net::telnet#preprocess()","net::telnet#print()","net::telnet#puts()","net::telnet#telnetmode()","net::telnet#telnetmode=()","net::telnet#waitfor()","net::telnet#write()"],"info":[["Net","","Net.html","",""],["Net::Telnet","","Net/Telnet.html","","<p>Net::Telnet\n<p>Provides telnet client functionality.\n<p>This class also has, through delegation, all the methods …\n"],["binmode","Net::Telnet","Net/Telnet.html#method-i-binmode","(mode = nil)","<p>Turn newline conversion on (<code>mode</code> == false) or off\n(<code>mode</code> == true), or return the current value (<code>mode</code>\nis …\n"],["binmode=","Net::Telnet","Net/Telnet.html#method-i-binmode-3D","(mode)","<p>Turn newline conversion on (false) or off (true).\n"],["close","Net::Telnet","Net/Telnet.html#method-i-close","()","<p>Closes the connection\n"],["cmd","Net::Telnet","Net/Telnet.html#method-i-cmd","(options)","<p>Send a command to the host.\n<p>More exactly, sends a string to the host, and reads in all received data\nuntil …\n"],["login","Net::Telnet","Net/Telnet.html#method-i-login","(options, password = nil)","<p>Login to the host with a given username and password.\n<p>The username and password can either be provided …\n"],["new","Net::Telnet","Net/Telnet.html#method-c-new","(options)","<p>Creates a new Net::Telnet object.\n<p>Attempts to connect to the host (unless the Proxy option is provided: …\n"],["preprocess","Net::Telnet","Net/Telnet.html#method-i-preprocess","(string)","<p>Preprocess received data from the host.\n<p>Performs newline conversion and detects telnet command sequences. …\n"],["print","Net::Telnet","Net/Telnet.html#method-i-print","(string)","<p>Sends a string to the host.\n<p>This does <em>not</em> automatically append a newline to the string. \nEmbedded newlines …\n"],["puts","Net::Telnet","Net/Telnet.html#method-i-puts","(string)","<p>Sends a string to the host.\n<p>Same as #print(), but appends a newline to the string.\n"],["telnetmode","Net::Telnet","Net/Telnet.html#method-i-telnetmode","(mode = nil)","<p>Set telnet command interpretation on (<code>mode</code> == true) or off\n(<code>mode</code> == false), or return the current value …\n"],["telnetmode=","Net::Telnet","Net/Telnet.html#method-i-telnetmode-3D","(mode)","<p>Turn telnet command interpretation on (true) or off (false).  It should be\non for true telnet sessions, …\n"],["waitfor","Net::Telnet","Net/Telnet.html#method-i-waitfor","(options)","<p>Read data from the host until a certain sequence is matched.\n<p>If a block is given, the received data will …\n"],["write","Net::Telnet","Net/Telnet.html#method-i-write","(string)","<p>Write <code>string</code> to the host.\n<p>Does not perform any conversions on <code>string</code>.  Will log\n<code>string</code> to the dumplog, …\n"]]}}
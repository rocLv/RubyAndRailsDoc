var search_data = {"index":{"searchIndex":["securerandom","openssl","base64()","gen_random()","hex()","random_bytes()","random_number()","urlsafe_base64()","uuid()"],"longSearchIndex":["securerandom","securerandom::openssl","securerandom::base64()","securerandom::gen_random()","securerandom::hex()","securerandom::random_bytes()","securerandom::random_number()","securerandom::urlsafe_base64()","securerandom::uuid()"],"info":[["SecureRandom","","SecureRandom.html","","<p>Secure random number generator interface.\n<p>This library is an interface for secure random number generator …\n"],["SecureRandom::OpenSSL","","SecureRandom/OpenSSL.html","",""],["base64","SecureRandom","SecureRandom.html#method-c-base64","(n=nil)","<p>SecureRandom.base64 generates a random base64 string.\n<p>The argument <em>n</em> specifies the length, in bytes, of …\n"],["gen_random","SecureRandom","SecureRandom.html#method-c-gen_random","(n)",""],["hex","SecureRandom","SecureRandom.html#method-c-hex","(n=nil)","<p>SecureRandom.hex generates a random hexadecimal string.\n<p>The argument <em>n</em> specifies the length, in bytes, …\n"],["random_bytes","SecureRandom","SecureRandom.html#method-c-random_bytes","(n=nil)","<p>SecureRandom.random_bytes generates a random binary string.\n<p>The argument <em>n</em> specifies the length of the …\n"],["random_number","SecureRandom","SecureRandom.html#method-c-random_number","(n=0)","<p>SecureRandom.random_number generates a random number.\n<p>If a positive integer is given as <em>n</em>, SecureRandom.random_number …\n"],["urlsafe_base64","SecureRandom","SecureRandom.html#method-c-urlsafe_base64","(n=nil, padding=false)","<p>SecureRandom.urlsafe_base64 generates a random URL-safe base64 string.\n<p>The argument <em>n</em> specifies the length, …\n"],["uuid","SecureRandom","SecureRandom.html#method-c-uuid","()","<p>SecureRandom.uuid generates a v4 random UUID (Universally Unique\nIDentifier).\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">p</span> <span class=\"ruby-constant\">SecureRandom</span>.<span class=\"ruby-identifier\">uuid</span> <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n"]]}}
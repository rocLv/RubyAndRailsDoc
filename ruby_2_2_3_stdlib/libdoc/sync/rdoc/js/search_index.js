var search_data = {"index":{"searchIndex":["object","synchronizer","synchronizer_m","err","lockmodefailer","unknownlocker","synchronizer","synchronizer_m","fail()","fail()","fail()","append_features()","append_features()","define_aliases()","define_aliases()","extend_object()","extend_object()","new()","new()","sync_exclusive?()","sync_exclusive?()","sync_extend()","sync_extend()","sync_inspect()","sync_inspect()","sync_lock()","sync_lock()","sync_locked?()","sync_locked?()","sync_shared?()","sync_shared?()","sync_synchronize()","sync_synchronize()","sync_try_lock()","sync_try_lock()","sync_unlock()","sync_unlock()"],"longSearchIndex":["object","sync","sync_m","sync_m::err","sync_m::err::lockmodefailer","sync_m::err::unknownlocker","synchronizer","synchronizer_m","sync_m::err::fail()","sync_m::err::lockmodefailer::fail()","sync_m::err::unknownlocker::fail()","sync_m::append_features()","sync_m::append_features()","sync_m::define_aliases()","sync_m::define_aliases()","sync_m::extend_object()","sync_m::extend_object()","sync_m::new()","sync_m::new()","sync_m#sync_exclusive?()","sync_m#sync_exclusive?()","sync_m#sync_extend()","sync_m#sync_extend()","sync_m#sync_inspect()","sync_m#sync_inspect()","sync_m#sync_lock()","sync_m#sync_lock()","sync_m#sync_locked?()","sync_m#sync_locked?()","sync_m#sync_shared?()","sync_m#sync_shared?()","sync_m#sync_synchronize()","sync_m#sync_synchronize()","sync_m#sync_try_lock()","sync_m#sync_try_lock()","sync_m#sync_unlock()","sync_m#sync_unlock()"],"info":[["Object","","Object.html","",""],["Sync","","Sync.html","","<p>A class that provides two-phase lock with a counter.  See Sync_m for\ndetails.\n"],["Sync_m","","Sync_m.html","","<p>A module that provides a two-phase lock with a counter.\n"],["Sync_m::Err","","Sync_m/Err.html","","<p>exceptions\n"],["Sync_m::Err::LockModeFailer","","Sync_m/Err/LockModeFailer.html","",""],["Sync_m::Err::UnknownLocker","","Sync_m/Err/UnknownLocker.html","",""],["Synchronizer","","Synchronizer.html","","<p>A class that provides two-phase lock with a counter.  See Sync_m for\ndetails.\n"],["Synchronizer_m","","Synchronizer_m.html","","<p>A module that provides a two-phase lock with a counter.\n"],["Fail","Sync_m::Err","Sync_m/Err.html#method-c-Fail","(*opt)",""],["Fail","Sync_m::Err::LockModeFailer","Sync_m/Err/LockModeFailer.html#method-c-Fail","(mode)",""],["Fail","Sync_m::Err::UnknownLocker","Sync_m/Err/UnknownLocker.html#method-c-Fail","(th)",""],["append_features","Sync_m","Sync_m.html#method-c-append_features","(cl)",""],["append_features","Sync_m","Sync_m.html#method-c-append_features","(cl)",""],["define_aliases","Sync_m","Sync_m.html#method-c-define_aliases","(cl)",""],["define_aliases","Sync_m","Sync_m.html#method-c-define_aliases","(cl)",""],["extend_object","Sync_m","Sync_m.html#method-c-extend_object","(obj)",""],["extend_object","Sync_m","Sync_m.html#method-c-extend_object","(obj)",""],["new","Sync_m","Sync_m.html#method-c-new","(*args)",""],["new","Sync_m","Sync_m.html#method-c-new","(*args)",""],["sync_exclusive?","Sync_m","Sync_m.html#method-i-sync_exclusive-3F","()",""],["sync_exclusive?","Sync_m","Sync_m.html#method-i-sync_exclusive-3F","()",""],["sync_extend","Sync_m","Sync_m.html#method-i-sync_extend","()",""],["sync_extend","Sync_m","Sync_m.html#method-i-sync_extend","()",""],["sync_inspect","Sync_m","Sync_m.html#method-i-sync_inspect","()",""],["sync_inspect","Sync_m","Sync_m.html#method-i-sync_inspect","()",""],["sync_lock","Sync_m","Sync_m.html#method-i-sync_lock","(m = EX)",""],["sync_lock","Sync_m","Sync_m.html#method-i-sync_lock","(m = EX)",""],["sync_locked?","Sync_m","Sync_m.html#method-i-sync_locked-3F","()","<p>accessing\n"],["sync_locked?","Sync_m","Sync_m.html#method-i-sync_locked-3F","()","<p>accessing\n"],["sync_shared?","Sync_m","Sync_m.html#method-i-sync_shared-3F","()",""],["sync_shared?","Sync_m","Sync_m.html#method-i-sync_shared-3F","()",""],["sync_synchronize","Sync_m","Sync_m.html#method-i-sync_synchronize","(mode = EX)",""],["sync_synchronize","Sync_m","Sync_m.html#method-i-sync_synchronize","(mode = EX)",""],["sync_try_lock","Sync_m","Sync_m.html#method-i-sync_try_lock","(mode = EX)","<p>locking methods.\n"],["sync_try_lock","Sync_m","Sync_m.html#method-i-sync_try_lock","(mode = EX)","<p>locking methods.\n"],["sync_unlock","Sync_m","Sync_m.html#method-i-sync_unlock","(m = EX)",""],["sync_unlock","Sync_m","Sync_m.html#method-i-sync_unlock","(m = EX)",""]]}}
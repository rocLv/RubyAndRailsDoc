var search_data = {"index":{"searchIndex":["tempfile","remover","close()","close!()","create()","delete()","length()","new()","open()","open()","path()","size()","unlink()"],"longSearchIndex":["tempfile","tempfile::remover","tempfile#close()","tempfile#close!()","tempfile::create()","tempfile#delete()","tempfile#length()","tempfile::new()","tempfile#open()","tempfile::open()","tempfile#path()","tempfile#size()","tempfile#unlink()"],"info":[["Tempfile","","Tempfile.html","","<p>A utility class for managing temporary files. When you create a Tempfile\nobject, it will create a temporary …\n"],["Tempfile::Remover","","Tempfile/Remover.html","",""],["close","Tempfile","Tempfile.html#method-i-close","(unlink_now=false)","<p>Closes the file. If <code>unlink_now</code> is true, then the file will be\nunlinked (deleted) after closing. Of course, …\n"],["close!","Tempfile","Tempfile.html#method-i-close-21","()","<p>Closes and unlinks (deletes) the file. Has the same effect as called\n<code>close(true)</code>.\n"],["create","Tempfile","Tempfile.html#method-c-create","(basename, tmpdir=nil, mode: 0, **options)","<p>Creates a temporally file as usual File object (not Tempfile). It don’t use\nfinalizer and delegation. …\n"],["delete","Tempfile","Tempfile.html#method-i-delete","()",""],["length","Tempfile","Tempfile.html#method-i-length","()",""],["new","Tempfile","Tempfile.html#method-c-new","(basename, tmpdir=nil, mode: 0, **options)","<p>Creates a temporary file with permissions 0600 (= only readable and\nwritable by the owner) and opens …\n"],["open","Tempfile","Tempfile.html#method-i-open","()","<p>Opens or reopens the file with mode “r+”.\n"],["open","Tempfile","Tempfile.html#method-c-open","(*args)","<p>Creates a new Tempfile.\n<p>If no block is given, this is a synonym for Tempfile.new.\n<p>If a block is given, …\n"],["path","Tempfile","Tempfile.html#method-i-path","()","<p>Returns the full path name of the temporary file. This will be nil if\n#unlink has been called.\n"],["size","Tempfile","Tempfile.html#method-i-size","()","<p>Returns the size of the temporary file.  As a side effect, the IO buffer is\nflushed before determining …\n"],["unlink","Tempfile","Tempfile.html#method-i-unlink","()","<p>Unlinks (deletes) the file from the filesystem. One should always unlink\nthe file after using it, as …\n"]]}}
var search_data = {"index":{"searchIndex":["tsort","cyclic","each_strongly_connected_component()","each_strongly_connected_component()","each_strongly_connected_component_from()","each_strongly_connected_component_from()","strongly_connected_components()","strongly_connected_components()","tsort()","tsort()","tsort_each()","tsort_each()","tsort_each_child()","tsort_each_node()"],"longSearchIndex":["tsort","tsort::cyclic","tsort#each_strongly_connected_component()","tsort::each_strongly_connected_component()","tsort#each_strongly_connected_component_from()","tsort::each_strongly_connected_component_from()","tsort#strongly_connected_components()","tsort::strongly_connected_components()","tsort#tsort()","tsort::tsort()","tsort::tsort_each()","tsort#tsort_each()","tsort#tsort_each_child()","tsort#tsort_each_node()"],"info":[["TSort","","TSort.html","","<p>TSort implements topological sorting using Tarjan’s algorithm for strongly\nconnected components.\n<p>TSort …\n"],["TSort::Cyclic","","TSort/Cyclic.html","",""],["each_strongly_connected_component","TSort","TSort.html#method-i-each_strongly_connected_component","()","<p>The iterator version of the #strongly_connected_components method.\n<code><em>obj</em>.each_strongly_connected_component</code> …\n"],["each_strongly_connected_component","TSort","TSort.html#method-c-each_strongly_connected_component","(each_node, each_child)","<p>The iterator version of the TSort.strongly_connected_components method.\n<p>The graph is represented by <em>each_node</em> …\n"],["each_strongly_connected_component_from","TSort","TSort.html#method-i-each_strongly_connected_component_from","(node, id_map={}, stack=[])","<p>Iterates over strongly connected component in the subgraph reachable from\n<em>node</em>.\n<p>Return value is unspecified. …\n"],["each_strongly_connected_component_from","TSort","TSort.html#method-c-each_strongly_connected_component_from","(node, each_child, id_map={}, stack=[])","<p>Iterates over strongly connected components in a graph. The graph is\nrepresented by <em>node</em> and <em>each_child</em> …\n"],["strongly_connected_components","TSort","TSort.html#method-i-strongly_connected_components","()","<p>Returns strongly connected components as an array of arrays of nodes. The\narray is sorted from children …\n"],["strongly_connected_components","TSort","TSort.html#method-c-strongly_connected_components","(each_node, each_child)","<p>Returns strongly connected components as an array of arrays of nodes. The\narray is sorted from children …\n"],["tsort","TSort","TSort.html#method-i-tsort","()","<p>Returns a topologically sorted array of nodes. The array is sorted from\nchildren to parents, i.e. the …\n"],["tsort","TSort","TSort.html#method-c-tsort","(each_node, each_child)","<p>Returns a topologically sorted array of nodes. The array is sorted from\nchildren to parents, i.e. the …\n"],["tsort_each","TSort","TSort.html#method-c-tsort_each","(each_node, each_child)","<p>The iterator version of the TSort.tsort method.\n<p>The graph is represented by <em>each_node</em> and <em>each_child</em>. …\n"],["tsort_each","TSort","TSort.html#method-i-tsort_each","()","<p>The iterator version of the #tsort method.\n<code><em>obj</em>.tsort_each</code> is similar to\n<code><em>obj</em>.tsort.each</code>, but modification …\n"],["tsort_each_child","TSort","TSort.html#method-i-tsort_each_child","(node)","<p>Should be implemented by a extended class.\n<p>#tsort_each_child is used to iterate for child nodes of <em>node</em> …\n"],["tsort_each_node","TSort","TSort.html#method-i-tsort_each_node","()","<p>Should be implemented by a extended class.\n<p>#tsort_each_node is used to iterate for all nodes over a graph. …\n"]]}}